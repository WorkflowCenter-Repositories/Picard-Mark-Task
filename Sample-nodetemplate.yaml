# Blueprint to deploy ImportDir task

tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.1/types.yaml
  - https://raw.githubusercontent.com/rawaqasha/e-sc-cloudify/master/esc_nodetypes.yaml
  - https://github.com/WorkflowCenter-Repositories/ImportDir-Task/raw/master/PicardMark_nodetype.yaml

inputs:

  input-dir:
      description: >
        The dir path of the input files  
      default: 'input'

  input-file:
      description: >
        The dir path of the input files  
      default: ''

  docker-image: 
      description: > 
        Docker image to be used for container building
      default: 'dtdwd/picardfile1'

node_types:

  docker_container:
    derived_from: cloudify.nodes.Root
    properties:
      image_name:
        type: string
        default: { get_input: docker-image }
      container_ID:
        type: string
        default: container1

node_templates:

  host:
    type: cloudify.nodes.Compute
    properties:
      ip: localhost
      install_agent: false

  starterBlock:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/start-inhost.sh
          inputs:
            process:
              args: [Sample_nodetemplate]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host

  container_node:
    type: docker_container
    properties:
      container_ID: task-container
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/container.sh
          inputs:
            process:
              args: [Sample_nodetemplate]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
      - type: cloudify.relationships.depends_on
        target: starterBlock

  Java:
    type: spec_library
    properties:
      lib_name: default-jdk
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/java-install2.sh
          inputs:
            process:
              args: [task-container]
    relationships:
      - type: cloudify.relationships.contained_in
        target: container

  ImportFile:

  Picard-Mark-node:
    type: picard-MarkDuplicates
    properties:
      block_description: I don't know
      block_name: Picard-Mark.jar
      block_category: File Management
      service_type: block
      Validation-Stringency: LENIENT
      Assume-Sorted: 'true'
      Remove-Duplicates: 'true'
      Comments: ''
    relationships:
      - type: cloudify.relationships.contained_in
        target: task-container
      - type: cloudify.relationships.depends_on
        target: Java
      - type: block_link
        target: Import-File
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure:
              implementation: Core-LifecycleScripts/datacopy.sh
              inputs:
                process:
                  args: [ImportFile/input-1, Picard-Mark-node/input-SAM_BAM-files, Sample_nodetemplate, task-container]
    interfaces:
      cloudify.interfaces.lifecycle:
        create: 
          implementation: Core-LifecycleScripts/task-download-multi.sh
          inputs:
            process:
             args: [{ get_input: create_image }, task-container, 'https://github.com/rawaqasha/eScBlocks-host/raw/master/Picard-Mark.jar']
        start:
          implementation: Core-LifecycleScripts/task-deploy.sh
          inputs:
            process:
              args: [Sample_nodetemplate, task-container] 

  finalBlock:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: scripts/final-inhost.sh
          inputs:
            process:
              args: [Sample_nodetemplate]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
      - type: cloudify.relationships.depends_on
        target: Picard-Mark-node
